# Generated by Django 5.1.6 on 2025-08-15 05:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('JLTsite', '0006_alter_user_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliverySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_delivery_duration', models.IntegerField(default=30, help_text='Durée par défaut en minutes')),
                ('default_pickup_duration', models.IntegerField(default=15, help_text='Durée de récupération en minutes')),
                ('delivery_zones', models.JSONField(default=dict, help_text='Zones et leurs tarifs')),
                ('excluded_postal_codes', models.JSONField(default=list, help_text='Codes postaux exclus')),
                ('delivery_start_time', models.TimeField(default='08:00')),
                ('delivery_end_time', models.TimeField(default='18:00')),
                ('send_customer_notifications', models.BooleanField(default=True)),
                ('notification_advance_time', models.IntegerField(default=30, help_text='Minutes avant livraison')),
                ('google_maps_api_key', models.CharField(blank=True, max_length=200)),
                ('auto_optimize_routes', models.BooleanField(default=True)),
                ('max_deliveries_per_route', models.IntegerField(default=20)),
            ],
            options={
                'verbose_name': 'Paramètres de livraison',
                'verbose_name_plural': 'Paramètres de livraison',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='driver_license',
            field=models.CharField(blank=True, max_length=50, verbose_name='Permis de conduire'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_available',
            field=models.BooleanField(default=True, verbose_name='Disponible'),
        ),
        migrations.AddField(
            model_name='user',
            name='vehicle_info',
            field=models.CharField(blank=True, max_length=200, verbose_name='Informations véhicule'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('customer', 'Client'), ('staff', 'Personnel'), ('admin', 'Administrateur'), ('checklist_manager', 'Checklist'), ('delivery_manager', 'Responsable Livraison'), ('delivery_driver', 'Livreur')], default='customer', max_length=20),
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('delivery_type', models.CharField(choices=[('delivery', 'Livraison'), ('pickup', 'Récupération')], default='delivery', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('assigned', 'Assignée'), ('in_transit', 'En cours'), ('delivered', 'Livrée'), ('failed', 'Échec'), ('cancelled', 'Annulée')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('normal', 'Normale'), ('high', 'Haute'), ('urgent', 'Urgente')], default='normal', max_length=20)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_email', models.EmailField(max_length=254)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('delivery_address', models.TextField()),
                ('delivery_postal_code', models.CharField(max_length=10)),
                ('delivery_city', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time_start', models.TimeField()),
                ('scheduled_time_end', models.TimeField()),
                ('estimated_duration', models.IntegerField(default=30, help_text='Durée estimée en minutes')),
                ('delivery_instructions', models.TextField(blank=True)),
                ('access_code', models.CharField(blank=True, help_text="Code d'accès immeuble", max_length=50)),
                ('parking_info', models.TextField(blank=True, help_text='Informations de stationnement')),
                ('items_description', models.TextField(help_text='Description des items à livrer')),
                ('total_packages', models.IntegerField(default=1)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Poids en kg', max_digits=10, null=True)),
                ('has_checklist', models.BooleanField(default=False)),
                ('checklist_completed', models.BooleanField(default=False)),
                ('delivery_photo', models.ImageField(blank=True, null=True, upload_to='deliveries/photos/')),
                ('pickup_photo', models.ImageField(blank=True, null=True, upload_to='deliveries/pickups/')),
                ('signature', models.TextField(blank=True, help_text='Signature électronique en base64')),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries_created', to=settings.AUTH_USER_MODEL)),
                ('delivered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries_completed', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='JLTsite.order')),
                ('parent_delivery', models.ForeignKey(blank=True, help_text='Livraison parente pour les récupérations', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pickup_deliveries', to='JLTsite.delivery')),
            ],
            options={
                'verbose_name': 'Livraison',
                'verbose_name_plural': 'Livraisons',
                'ordering': ['scheduled_date', 'scheduled_time_start'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('delivery', 'Photo de livraison'), ('pickup', 'Photo de récupération'), ('package', 'Photo du colis'), ('location', 'Photo du lieu'), ('issue', 'Photo de problème')], max_length=20)),
                ('photo', models.ImageField(upload_to='deliveries/photos/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('taken_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='JLTsite.delivery')),
                ('taken_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Photo de livraison',
                'verbose_name_plural': 'Photos de livraison',
                'ordering': ['-taken_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la route')),
                ('date', models.DateField(verbose_name='Date de la route')),
                ('start_time', models.TimeField(verbose_name='Heure de départ')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='Heure de fin estimée')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('planned', 'Planifiée'), ('in_progress', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='draft', max_length=20)),
                ('vehicle', models.CharField(blank=True, max_length=100)),
                ('start_location', models.CharField(default='Julien-Leblanc Traiteur', max_length=200)),
                ('start_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('start_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('completed_deliveries', models.IntegerField(default=0)),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, help_text='Distance totale en km', max_digits=10)),
                ('estimated_duration', models.IntegerField(default=0, help_text='Durée estimée en minutes')),
                ('is_optimized', models.BooleanField(default=False, help_text='Route optimisée automatiquement')),
                ('optimization_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routes_created', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(limit_choices_to={'role': 'delivery_driver'}, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_routes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Route de livraison',
                'verbose_name_plural': 'Routes de livraison',
                'ordering': ['-date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('new_delivery', 'Nouvelle livraison'), ('route_assigned', 'Route assignée'), ('delivery_late', 'Livraison en retard'), ('reminder', 'Rappel'), ('issue', 'Problème signalé'), ('completed', 'Livraison complétée')], max_length=20)),
                ('recipient_type', models.CharField(choices=[('driver', 'Livreur'), ('manager', 'Responsable'), ('customer', 'Client')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_urgent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='JLTsite.delivery')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_notifications', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='JLTsite.deliveryroute')),
            ],
            options={
                'verbose_name': 'Notification de livraison',
                'verbose_name_plural': 'Notifications de livraison',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DriverPlanning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('unavailability_reason', models.CharField(blank=True, max_length=200)),
                ('max_deliveries', models.IntegerField(default=20)),
                ('max_weight', models.DecimalField(decimal_places=2, default=100, help_text='Poids max en kg', max_digits=10)),
                ('zones', models.JSONField(blank=True, default=list, help_text='Liste des codes postaux ou zones')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plannings_created', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(limit_choices_to={'role': 'delivery_driver'}, on_delete=django.db.models.deletion.CASCADE, related_name='planning', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Planning livreur',
                'verbose_name_plural': 'Plannings livreurs',
                'ordering': ['date', 'driver'],
            },
        ),
        migrations.CreateModel(
            name='RouteDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0, help_text='Position dans la route')),
                ('estimated_arrival', models.TimeField(blank=True, null=True)),
                ('estimated_departure', models.TimeField(blank=True, null=True)),
                ('actual_arrival', models.TimeField(blank=True, null=True)),
                ('actual_departure', models.TimeField(blank=True, null=True)),
                ('distance_from_previous', models.DecimalField(decimal_places=2, default=0, help_text='Distance en km', max_digits=10)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_assignments', to='JLTsite.delivery')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_deliveries', to='JLTsite.deliveryroute')),
            ],
            options={
                'verbose_name': 'Livraison de route',
                'verbose_name_plural': 'Livraisons de route',
                'ordering': ['route', 'position'],
            },
        ),
        migrations.AddIndex(
            model_name='delivery',
            index=models.Index(fields=['scheduled_date', 'status'], name='JLTsite_del_schedul_2691b0_idx'),
        ),
        migrations.AddIndex(
            model_name='delivery',
            index=models.Index(fields=['delivery_type', 'status'], name='JLTsite_del_deliver_790fd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deliveryroute',
            unique_together={('driver', 'date', 'route_number')},
        ),
        migrations.AlterUniqueTogether(
            name='driverplanning',
            unique_together={('driver', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='routedelivery',
            unique_together={('route', 'delivery')},
        ),
    ]
