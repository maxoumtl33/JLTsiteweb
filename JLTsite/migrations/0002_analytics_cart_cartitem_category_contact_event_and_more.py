# Generated by Django 5.1.6 on 2025-08-10 13:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('JLTsite', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_orders', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_customers', models.IntegerField(default=0)),
                ('new_customers', models.IntegerField(default=0)),
                ('returning_customers', models.IntegerField(default=0)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('promo_codes_used', models.IntegerField(default=0)),
                ('cancelled_orders', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('customization_notes', models.TextField(blank=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='JLTsite.cart')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='categories/')),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('subject', models.CharField(choices=[('general', 'Question générale'), ('order', 'Commande'), ('event', 'Événement'), ('complaint', 'Réclamation'), ('other', 'Autre')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_answered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('event_type', models.CharField(choices=[('corporate', 'Corporatif'), ('wedding', 'Mariage'), ('birthday', 'Anniversaire'), ('other', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('location', models.CharField(max_length=300)),
                ('guest_count', models.IntegerField()),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventMenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('special_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JLTsite.event')),
            ],
        ),
        migrations.CreateModel(
            name='LunchBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('ingredients', models.TextField(help_text='Liste des ingrédients')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(upload_to='lunch_boxes/')),
                ('thumbnail', models.ImageField(blank=True, upload_to='lunch_boxes/thumbs/')),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_gluten_free', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('preparation_time', models.IntegerField(default=30, help_text='Temps de préparation en minutes')),
                ('min_order_quantity', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.IntegerField(default=0)),
                ('sales_count', models.IntegerField(default=0)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lunch_boxes', to='JLTsite.category')),
            ],
            options={
                'verbose_name_plural': 'Lunch Boxes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('preparing', 'En préparation'), ('ready', 'Prête'), ('delivered', 'Livrée'), ('cancelled', 'Annulée')], default='pending', max_length=20)),
                ('delivery_type', models.CharField(choices=[('pickup', 'Ramassage'), ('delivery', 'Livraison')], max_length=20)),
                ('delivery_address', models.TextField()),
                ('delivery_date', models.DateField()),
                ('delivery_time', models.TimeField()),
                ('special_instructions', models.TextField(blank=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_id', models.CharField(blank=True, max_length=100)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customization_notes', models.TextField(blank=True)),
                ('lunch_box', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='JLTsite.lunchbox')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='JLTsite.order')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Pourcentage'), ('fixed', 'Montant fixe')], max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_order', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('usage_limit', models.IntegerField(blank=True, help_text='Laisser vide pour illimité', null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('user_limit', models.IntegerField(default=1, help_text="Nombre d'utilisations par client")),
                ('is_combinable', models.BooleanField(default=False, help_text="Peut être combiné avec d'autres codes")),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='promo_codes', to='JLTsite.category')),
                ('applicable_products', models.ManyToManyField(blank=True, related_name='promo_codes', to='JLTsite.lunchbox')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lunch_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='JLTsite.lunchbox')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(default='Montreal', max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='jltsite_user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='jltsite_user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='BoiteALunch',
        ),
        migrations.AddField(
            model_name='eventmenuitem',
            name='lunch_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JLTsite.lunchbox'),
        ),
        migrations.AddField(
            model_name='event',
            name='menu_items',
            field=models.ManyToManyField(through='JLTsite.EventMenuItem', to='JLTsite.lunchbox'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='lunch_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JLTsite.lunchbox'),
        ),
        migrations.AddField(
            model_name='analytics',
            name='most_sold_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='JLTsite.lunchbox'),
        ),
        migrations.AddField(
            model_name='order',
            name='promo_codes_used',
            field=models.ManyToManyField(blank=True, to='JLTsite.promocode'),
        ),
        migrations.AddField(
            model_name='review',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='JLTsite.order'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JLTsite.user'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='JLTsite.user'),
        ),
        migrations.AddField(
            model_name='event',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='JLTsite.user'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='JLTsite.user'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('lunch_box', 'user', 'order')},
        ),
    ]
